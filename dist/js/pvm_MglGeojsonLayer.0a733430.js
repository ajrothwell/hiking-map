(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["pvm_MglGeojsonLayer"],{"760f":function(e,t,r){"use strict";r.r(t);var s=r("a2c7"),i=r("521f");t["default"]={name:"GeojsonLayer",mixins:[i["a"]],computed:{getSourceFeatures(){return e=>this.map?this.map.querySourceFeatures(this.sourceId,{filter:e}):null},getRenderedFeatures(){return(e,t)=>this.map?this.map.queryRenderedFeatures(e,{layers:[this.layerId],filter:t}):null},getClusterExpansionZoom(){return e=>new Promise((t,r)=>{if(!this.mapSource)return r(new Error(`Map source with id ${this.sourceId} not found.`));this.mapSource.getClusterExpansionZoom(e,(e,s)=>e?r(e):t(s))})},getClusterChildren(){return e=>new Promise((t,r)=>{const s=this.mapSource;if(!s)return r(new Error(`Map source with id ${this.sourceId} not found.`));s.getClusterChildren(e,(e,s)=>e?r(e):t(s))})},getClusterLeaves(){return(...e)=>new Promise((t,r)=>{if(!this.mapSource)return r(new Error(`Map source with id ${this.sourceId} not found.`));this.mapSource.getClusterLeaves(...e,(e,s)=>e?r(e):t(s))})}},created(){this.source&&this.$watch("source.data",(function(e){if(this.initial)return;let t=this.$store.map.getSource(this.$props.sourceId);t&&t.setData(e)}),{deep:!0}),this.$_deferredMount()},methods:{$_deferredMount(){if(this.map.on("dataloading",this.$_watchSourceLoading),this.source){const t={type:"geojson",...this.source};try{this.$props.layer.layout["icon-image"]&&this.map.loadImage(this.$attrs.icon,function(e,t){this.map.addImage(this.$props.layer.layout["icon-image"],t)}.bind(this));let e=Object.keys(this.map.style.sourceCaches);e.includes(this.sourceId)||this.map.addSource(this.sourceId,t)}catch(e){console.log("catch err is running, err:",e),this.replaceSource&&(this.map.removeSource(this.sourceId),this.map.addSource(this.sourceId,t))}}this.$_addLayer(),this.$_bindLayerEvents(s["a"]),this.map.off("dataloading",this.$_watchSourceLoading),this.initial=!1},$_addLayer(){let e=this.map.getLayer(this.layerId);if(e){if(!this.replace)return this.$_emitEvent("layer-exists",{layerId:this.layerId}),e;this.map.removeLayer(this.layerId)}const t={source:this.sourceId,...this.layer};t.id=this.layerId;let r=this.before,s=this.map.getStyle().layers,i=[];for(let a of s)if(r&&r.includes(a.id)){i.push(a.id);break}i.length?this.map.addLayer(t,i[0]):this.map.addLayer(t),this.$_emitEvent("added",{layerId:this.layerId})},setFeatureState(e,t){if(this.map){const r={id:e,source:this.source};return this.map.setFeatureState(r,t)}},getFeatureState(e){if(this.map){const t={id:e,source:this.source};return this.map.getFeatureState(t)}},removeFeatureState(e,t,r){if(this.map){const s={id:e,source:this.source,sourceLayer:t};return this.map.removeFeatureState(s,r)}}}}}}]);
//# sourceMappingURL=pvm_MglGeojsonLayer.0a733430.js.map